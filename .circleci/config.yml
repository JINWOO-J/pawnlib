version: 2.1
orbs:
  python: circleci/python@2
jobs:
  install-dependencies:
    docker:
      - image: cimg/python:3.9.20-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - pip-cache-{{ checksum "requirements.dev.txt" }}
      - run:
          name: Create and activate virtual environment
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install -r requirements.dev.txt hatchling twine parameterized
      - save_cache:
          key: pip-cache-{{ checksum "requirements.dev.txt" }}
          paths:
            - ~/.cache/pip
      - persist_to_workspace:
          root: .
          paths:
            - .
            - venv/*
  test-python:
    docker:
      - image: cimg/python:3.9.20-node
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Activate virtual environment and run tests
          command: |
            . venv/bin/activate
            make test || ((($? == 5)) && echo 'Did not find any tests to run.')
      - store_test_results:
          path: junit.xml
  build-package:
    docker:
      - image: cimg/python:3.9.20-node
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build package with hatchling
          command: |
            . venv/bin/activate
            python3 -m hatchling build
      - persist_to_workspace:
          root: .
          paths:
            - dist/*
      - store_artifacts:
          path: dist
          destination: ~/artifacts
  deploy:
    docker:
      - image: cimg/python:3.9.20-node
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Upload to PyPI
          command: |
            . venv/bin/activate
            python3 -m twine upload dist/* --verbose -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD"
workflows:
  build-and-test:
    jobs:
      - install-dependencies
      - test-python:
          requires:
            - install-dependencies
      - build-package:
          requires:
            - test-python
      - deploy:
          requires:
            - build-package